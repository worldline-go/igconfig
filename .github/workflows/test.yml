on: [push]

name: Test
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - name: get repository name
      run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - uses: actions/setup-go@v4
      with:
        go-version: '1.21' # The Go version to download (if necessary) and use.
    - name: golangci config
      run: |
        [[ ! -f ".golangci.yml" ]] && curl -kfsSL -O https://raw.githubusercontent.com/worldline-go/guide/main/lint/.golangci.yml
        echo GOPATH="$(dirname ${PWD})" >> $GITHUB_ENV
    - name: golangci-lint general
      uses: golangci/golangci-lint-action@v3
      with:
        args: --issues-exit-code 0 --out-format checkstyle:golangci-lint-report.out,colored-line-number
    - name: golangci-lint critical check
      run: |
        golangci-lint run --new-from-rev remotes/origin/${{ github.event.repository.default_branch }} ./...
    - name: Run tests
      run: |
        go test -coverprofile=coverage.out -json ./... > test-report.out
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.organization=${{ github.repository_owner }}
          -Dsonar.projectKey=${{ github.repository_owner }}_${{ env.REPOSITORY_NAME }}
          -Dsonar.go.coverage.reportPaths=coverage.out
          -Dsonar.go.tests.reportPaths=test-report.out
          -Dsonar.go.golangci-lint.reportPaths=golangci-lint-report.out
          -Dsonar.sources=.
          -Dsonar.exclusions=**/vendor/**,**/*_test.go
          -Dsonar.tests=.
          -Dsonar.test.inclusions=**/*_test.go
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
